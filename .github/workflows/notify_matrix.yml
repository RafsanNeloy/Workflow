name: Notify Matrix Channel of Test Message

on:
  schedule:
    - cron: '0 14 * * 4'  # Every Wednesday at 14:00 UTC 
  workflow_dispatch:  # Allows manual triggering

env:
  FIRST_RUN_DATE: "2024-11-20"  # Set the first Wednesday you want this to run

jobs:
  weekindex:
    runs-on: ubuntu-latest
    outputs:
      weekindex: ${{ steps.calculate.outputs.weekindex }}
      next_bi_weekly_date: ${{ steps.calculate.outputs.next_bi_weekly_date }}
      next_next_bi_weekly_date: ${{ steps.calculate.outputs.next_next_bi_weekly_date }}
      is_code_night: ${{ steps.calculate.outputs.is_code_night }}

    steps:
      - name: Calculate week difference and next bi-weekly date
        id: calculate
        run: |
          current_date=$(date +%Y-%m-%d)
          start=$(date -d "${{ env.FIRST_RUN_DATE }}" +%s)
          end=$(date -d "$current_date" +%s)
          weekdiff=$(((end - start) / 60 / 60 / 24 / 7))
          weekindex=$((weekdiff % 2))

          # Calculate next bi-weekly date
          if [ "$weekindex" -eq 0 ]; then
            next_bi_weekly_date=$(date -d "$current_date + 3 days" +%Y-%m-%d)
            next_next_bi_weekly_date=$(date -d "$current_date + 17 days" +%Y-%m-%d)

          else
            next_bi_weekly_date=$(date -d "$current_date + 10 days" +%Y-%m-%d)
            next_next_bi_weekly_date=$(date -d "$current_date + 24 days" +%Y-%m-%d)

          fi

          # Check if it's a Code Night (last sync in Jan, Mar, May, Jul, Sep, Nov)
          sync_month=$(date -d "$next_bi_weekly_date" +%m)
          sync_year=$(date -d "$next_bi_weekly_date" +%Y)
          
          # Calculate the sync date after the next bi-weekly date
          following_sync_date=$(date -d "$next_bi_weekly_date + 14 days" +%Y-%m-%d)
          following_sync_month=$(date -d "$following_sync_date" +%m)
          following_sync_year=$(date -d "$following_sync_date" +%Y)
          
          is_code_night="false"
          
          # Check if current sync is in a Code Night month (01,03,05,07,09,11)
          if [[ "$sync_month" == "01" || "$sync_month" == "03" || "$sync_month" == "05" || "$sync_month" == "07" || "$sync_month" == "09" || "$sync_month" == "11" ]]; then
            # Check if the following sync would be in a different month (meaning this is the last sync of the current month)
            if [[ "$following_sync_month" != "$sync_month" || "$following_sync_year" != "$sync_year" ]]; then
              is_code_night="true"
            fi
          fi

          echo "weekindex=$weekindex" >> "$GITHUB_OUTPUT"
          echo "next_bi_weekly_date=$next_bi_weekly_date" >> "$GITHUB_OUTPUT"
          echo "next_next_bi_weekly_date=$next_next_bi_weekly_date" >> "$GITHUB_OUTPUT"
          echo "is_code_night=$is_code_night" >> "$GITHUB_OUTPUT"

          echo "FIRST_RUN_DATE: ${{ env.FIRST_RUN_DATE }}" >> $GITHUB_STEP_SUMMARY
          echo "current_date: $current_date" >> $GITHUB_STEP_SUMMARY
          echo "weekdiff: $weekdiff" >> $GITHUB_STEP_SUMMARY
          echo "weekindex: $weekindex" >> $GITHUB_STEP_SUMMARY
          echo "next_bi_weekly_date: $next_bi_weekly_date" >> $GITHUB_STEP_SUMMARY
          echo "sync_month: $sync_month" >> $GITHUB_STEP_SUMMARY
          echo "following_sync_date: $following_sync_date" >> $GITHUB_STEP_SUMMARY
          echo "following_sync_month: $following_sync_month" >> $GITHUB_STEP_SUMMARY
          echo "is_code_night: $is_code_night" >> $GITHUB_STEP_SUMMARY
          if [ "$weekindex" -eq 0 ]; then
            echo "🟢 It's the first week of the bi-weekly cycle. The action is going to run." >> $GITHUB_STEP_SUMMARY
          else
            echo "🔴 It's the second week of the bi-weekly cycle. The action is going to be skipped." >> $GITHUB_STEP_SUMMARY
          fi
          if [ "$is_code_night" == "true" ]; then
            echo "🌙 This is a Code Night sync!" >> $GITHUB_STEP_SUMMARY
          fi

  send-message:
    if: ${{ needs.weekindex.outputs.weekindex == '0' }}
    runs-on: ubuntu-latest
    needs:
      - weekindex
    steps:
      - name: Debug Code Night Detection
        run: |
          echo "=== DEBUG CODE NIGHT DETECTION ===" >> $GITHUB_STEP_SUMMARY
          echo "is_code_night output: ${{ needs.weekindex.outputs.is_code_night }}" >> $GITHUB_STEP_SUMMARY
          echo "next_bi_weekly_date: ${{ needs.weekindex.outputs.next_bi_weekly_date }}" >> $GITHUB_STEP_SUMMARY
          
          # Recalculate to debug
          next_bi_weekly_date="${{ needs.weekindex.outputs.next_bi_weekly_date }}"
          sync_month=$(date -d "$next_bi_weekly_date" +%m)
          sync_year=$(date -d "$next_bi_weekly_date" +%Y)
          following_sync_date=$(date -d "$next_bi_weekly_date + 14 days" +%Y-%m-%d)
          following_sync_month=$(date -d "$following_sync_date" +%m)
          following_sync_year=$(date -d "$following_sync_date" +%Y)
          
          echo "sync_month: $sync_month" >> $GITHUB_STEP_SUMMARY
          echo "sync_year: $sync_year" >> $GITHUB_STEP_SUMMARY
          echo "following_sync_date: $following_sync_date" >> $GITHUB_STEP_SUMMARY
          echo "following_sync_month: $following_sync_month" >> $GITHUB_STEP_SUMMARY
          echo "following_sync_year: $following_sync_year" >> $GITHUB_STEP_SUMMARY
          
          is_code_night_month="false"
          if [[ "$sync_month" == "01" || "$sync_month" == "03" || "$sync_month" == "05" || "$sync_month" == "07" || "$sync_month" == "09" || "$sync_month" == "11" ]]; then
            is_code_night_month="true"
          fi
          echo "is_code_night_month: $is_code_night_month" >> $GITHUB_STEP_SUMMARY
          
          is_last_sync_of_month="false"
          if [[ "$following_sync_month" != "$sync_month" || "$following_sync_year" != "$sync_year" ]]; then
            is_last_sync_of_month="true"
          fi
          echo "is_last_sync_of_month: $is_last_sync_of_month" >> $GITHUB_STEP_SUMMARY
          
          should_be_code_night="false"
          if [[ "$is_code_night_month" == "true" && "$is_last_sync_of_month" == "true" ]]; then
            should_be_code_night="true"
          fi
          echo "should_be_code_night: $should_be_code_night" >> $GITHUB_STEP_SUMMARY
          echo "=== END DEBUG ===" >> $GITHUB_STEP_SUMMARY

      - name: Format EPOCH time
        id: epoch-time
        run: |
          current_epoch_time=$(date +%s)
          next_epoch_time=$(date -d "${{ needs.weekindex.outputs.next_bi_weekly_date }} 15:00:00" +%s)
          next_next_epoch_time=$(date -d "${{ needs.weekindex.outputs.next_next_bi_weekly_date }} 15:00:00" +%s)
          echo "EPOCH_TIME=$current_epoch_time" >> $GITHUB_ENV
          echo "NEXT_BI_WEEKLY_DATE=${{ needs.weekindex.outputs.next_bi_weekly_date }}" >> $GITHUB_ENV
          echo "NEXT_EPOCH_TIME=$next_epoch_time" >> $GITHUB_ENV
          echo "NEXT_EPOCH_TIME=$next_epoch_time" >> $GITHUB_ENV
          echo "NEXT_NEXT_BI_WEEKLY_DATE=${{ needs.weekindex.outputs.next_next_bi_weekly_date }}" >> $GITHUB_ENV
          echo "NEXT_NEXT_EPOCH_TIME=$next_next_epoch_time" >> $GITHUB_ENV

          echo "Current EPOCH time: $current_epoch_time" >> $GITHUB_STEP_SUMMARY
          echo "Next bi-weekly date: ${{ needs.weekindex.outputs.next_bi_weekly_date }}" >> $GITHUB_STEP_SUMMARY
          echo "Next EPOCH time (for sync): $next_epoch_time" >> $GITHUB_STEP_SUMMARY
          echo "Next next bi-weekly date: ${{ needs.weekindex.outputs.next_next_bi_weekly_date }}" >> $GITHUB_STEP_SUMMARY
          echo "Next next EPOCH time (for sync): $next_next_epoch_time" >> $GITHUB_STEP_SUMMARY

      - name: Add Content to Etherpad Without API
        env:
            NEXT_BI_WEEKLY_DATE: ${{ env.NEXT_BI_WEEKLY_DATE }}
            NEXT_EPOCH_TIME: ${{ env.NEXT_EPOCH_TIME }}
            NEXT_NEXT_BI_WEEKLY_DATE: ${{ env.NEXT_NEXT_BI_WEEKLY_DATE }}
            NEXT_NEXT_EPOCH_TIME: ${{ env.NEXT_NEXT_EPOCH_TIME }}
            IS_CODE_NIGHT: ${{ needs.weekindex.outputs.is_code_night }}
 
        run: |
            pip install requests
            python - <<EOF
            import requests
            import os
            from datetime import datetime
        
            next_epoch_time = os.environ.get('NEXT_EPOCH_TIME')
            next_bi_weekly_date = os.environ.get('NEXT_BI_WEEKLY_DATE')
            next_next_epoch_time = os.environ.get('NEXT_NEXT_EPOCH_TIME')
            next_next_bi_weekly_date = os.environ.get('NEXT_NEXT_BI_WEEKLY_DATE')
            is_code_night = os.environ.get('IS_CODE_NIGHT') == 'true'

            pad_name = f'axif-{next_bi_weekly_date}'
            url = f'https://etherpad.wikimedia.org/p/{pad_name}/import'
            print(f"Importing content to: https://etherpad.wikimedia.org/p/{pad_name}")
            print("mamamia",next_next_epoch_time)
            
            # Add Code Night section if it's a Code Night sync
            code_night_section = ""
            if is_code_night:
                code_night_section = """
            <h2>🌙 Code Night</h2>
            <p>This is our monthly Code Night! After the dev sync, we'll continue with collaborative coding sessions.</p>
            <p><strong>What is Code Night?</strong></p>
            <ul>
              <li>Collaborative coding sessions</li>
              <li>Work on issues together</li>
              <li>Get help with contributions</li>
              <li>Pair programming opportunities</li>
              <li>Perfect for both beginners and experienced developers</li>
            </ul>
            <p><strong>Code Night Participants:</strong></p>
            <ul>
              <li>Participant (what you'll be working on)</li>
            </ul>
            <br> <!-- Added space -->
            """
        
            # The text you want to add to the pad
            content = f"""<html><body>
            <h1>Scribe Dev Sync {next_bi_weekly_date}{' + Code Night 🌙' if is_code_night else ''}</h1>
        
            <p>Pad directory:  https://etherpad.wikimedia.org/p/scribe-dev-sync</a><br>
            ZoneStamp:  https://zonestamp.toolforge.org/{next_epoch_time}</a></p>
            <br> <!-- Added space -->
        
            <h2>Participants (please list yourself if you'd like to)</h2>
            <ul>
              <li>Participant</li>
            </ul>
            <br> <!-- Added space -->
        
            <h2>Topics</h2>
            <ul>
              <li>All: introductions 👋</li>
              <li>All: does anyone want a calendar invite to the dev sync? If so, send them out :)
                  <ul>
                      <li>If you would like an invite, please message Andrew on Matrix/Element</li>
                  </ul>
                </li>
              <li>Recap done by: NAME</li>
              <li>Go through the [project board](https://github.com/orgs/scribe-org/projects/1)</a></li>
              <li>Name:</li>
            </ul>
            <br> <!-- Added space -->
            
            {code_night_section}
        
            <h2>Tasks (strikethrough ^/⌘ + 5 to mark as complete)</h2>
            <ul>
              <li>Task</li>
            </ul>
            <br> <!-- Added space -->
        
            <h2>Recap</h2>
            <br> <!-- Added space -->
            <br> <!-- Added space -->
            <p>Here's the recap for today's/Saturday's dev sync 🧑‍💻♻️{' and Code Night 🌙' if is_code_night else ''}</p>
        
            <ul>
              <li>[Pad for this week](https://etherpad.wikimedia.org/p/scribe-dev-sync-${{ env.NEXT_BI_WEEKLY_DATE }}) </a></li>
              <li>Note</li>
            </ul>
            <br> <!-- Added space -->
        
                <p>The next dev sync will be [Saturday the {next_next_bi_weekly_date} at 15:00 UTC](https://zonestamp.toolforge.org/{next_next_epoch_time}) </a>.</p>
          
            <br> <!-- Added space -->
            <p>Nice outro 😊</p>
        
            </body></html>"""
        
            # Prepare the file to upload
            files = {
                'file': ('import.html', content.encode('utf-8'), 'text/html'),
            }
        
            response = requests.post(url, files=files)
        
            if response.status_code in [200, 302]:
                print(f"Content imported successfully into pad '{pad_name}'.")
            elif response.status_code == 413:
                print("The file is too large to upload.")
            else:
                print(f"Failed to import content. Status code: {response.status_code}")
                print(response.text)
            EOF
           

      - name: Send regular dev sync message to Matrix channel
        if: ${{ needs.weekindex.outputs.is_code_night == 'false' }}
        id: matrix-chat-message-regular
        uses: fadenb/matrix-chat-message@v0.0.6
        with:
          homeserver: 'matrix.org'
          token: ${{ secrets.MATRIX_ACCESS_TOKEN }}
          channel: ${{ secrets.MATRIX_ROOM_ID }}
          message: |
            Hey all! 🤖👋 Here's the reminder for [this Saturday's dev sync at 15:00 UTC](https://zonestamp.toolforge.org/${{ env.NEXT_EPOCH_TIME }}) 🤝♻️

            Details for it::
            - Call link: https://call.element.io/room/#/activist-dev-sync?roomId=!UddhHUSXxHAoAnImXb:call.ems.host&password=ASriEQCG4DE6Q1QSB313zig0bhLd62RN
            - This week's pad: https://etherpad.wikimedia.org/p/activist-dev-sync-${{ env.NEXT_BI_WEEKLY_DATE }}
            - All pads: https://etherpad.wikimedia.org/p/activist-dev-sync

            Please reply with anything you'd like to discuss 🧕🏼‍♀️

            Thanks and have a great day! ❤️

      - name: Send Code Night dev sync message to Matrix channel
        if: ${{ needs.weekindex.outputs.is_code_night == 'true' }}
        id: matrix-chat-message-code-night
        uses: fadenb/matrix-chat-message@v0.0.6
        with:
          homeserver: 'matrix.org'
          token: ${{ secrets.MATRIX_ACCESS_TOKEN }}
          channel: ${{ secrets.MATRIX_ROOM_ID }}
          message: |
            Hey all! 🤖👋 Here's the reminder for [this Saturday's dev sync at 15:00 UTC](https://zonestamp.toolforge.org/${{ env.NEXT_EPOCH_TIME }}) 🤝♻️

            🌙 **Special announcement**: This is also our monthly Code Night! After the dev sync, we'll continue with collaborative coding sessions where you can work on issues, get help with contributions, or pair program with other contributors. Perfect for both beginners and experienced developers! 💻✨

            Details for it::
            - Call link: https://call.element.io/room/#/activist-dev-sync?roomId=!UddhHUSXxHAoAnImXb:call.ems.host&password=ASriEQCG4DE6Q1QSB313zig0bhLd62RN
            - This week's pad: https://etherpad.wikimedia.org/p/activist-dev-sync-${{ env.NEXT_BI_WEEKLY_DATE }}
            - All pads: https://etherpad.wikimedia.org/p/activist-dev-sync

            Please reply with anything you'd like to discuss 🧕🏼‍♀️ And let us know if you're planning to stay for Code Night!

            Thanks and have a great day! ❤️
