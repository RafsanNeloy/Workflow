name: Issue Assignment Workflow

on:
  issue_comment:
    types: [created]

jobs:
  assign_issue:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
      
    - name: Assign Issue
      uses: actions/github-script@v6
      with:
        script: |
          // Get the list of authorized users from secrets
          const authorizedUsers = process.env.AUTHORIZED_USERS.split(',').map(user => user.trim());
          
          const issueNumber = context.payload.issue.number;
          const commentBody = context.payload.comment.body;
          const commentAuthor = context.payload.comment.user.login;
          
          // Log for debugging (excluding sensitive data)
          console.log(`Processing comment on issue #${issueNumber}`);
          console.log(`Comment author: ${commentAuthor}`);
          
          // Check if the comment author is authorized
          if (!authorizedUsers.includes(commentAuthor)) {
            console.log(`Unauthorized user ${commentAuthor} attempted to use assignment command`);
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: issueNumber,
              body: `@${commentAuthor} You are not authorized to assign issues.`
            });
            return;
          }
          
          // Parse the assign command
          const assignRegex = /^\/assign\s+(@[\w-]+\s*)+$/m;
          const match = commentBody.match(assignRegex);
          
          if (match) {
            // Extract usernames (removing @ symbol)
            const assignees = [...commentBody.matchAll(/@([\w-]+)/g)]
              .map(match => match[1]);
            
            if (assignees.length > 0) {
              try {
                // Attempt to assign the issue
                await github.rest.issues.addAssignees({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  issue_number: issueNumber,
                  assignees: assignees
                });
                
                // Add confirmation comment
                await github.rest.issues.createComment({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  issue_number: issueNumber,
                  body: `✅ Issue assigned to: ${assignees.map(user => '@' + user).join(', ')}`
                });
                
                console.log(`Successfully assigned issue #${issueNumber} to ${assignees.join(', ')}`);
              } catch (error) {
                console.error('Error assigning issue:', error);
                
                // Add error comment
                await github.rest.issues.createComment({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  issue_number: issueNumber,
                  body: `❌ Error assigning users. Please make sure all usernames are valid.`
                });
              }
            }
          } else {
            console.log('No valid /assign command found');
          }
      env:
        AUTHORIZED_USERS: ${{ secrets.AUTHORIZED_USERS }}
